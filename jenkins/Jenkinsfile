pipeline {
    agent any

    parameters{
        gitParameter(name: 'BRANCH_TO_DEPLOY', branch: '', branchFilter: '.*', defaultValue: 'jenkins',
        quickFilterEnabled: false, selectedValue: 'NONE', sortMode: 'NONE', tagFilter: '*',
        type: 'GitParameterDefinition', useRepository: 'https://github.com/yanpgabriel/DuckApp.git')
    }

    tools('Configurando Ferramentas') {
        dockerTool 'Docker Jenkins'
    }

    environment {
        GIT_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
        COMMITER_NAME = sh(script: 'git show -s --pretty=%an', returnStdout: true).trim()
        COMMITER_EMAIL = sh(script: 'git show -s --format=%ae', returnStdout: true).trim()
        COMMITER_COMMENT = sh(script: 'git show -s --pretty=%B', returnStdout: true).trim()

        NAMESPACE = 'duck-namespace'

        NODE_IMAGE = 'node:19.4-bullseye-slim'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds(abortPrevious: true)
    }

    stages {
        stage('Checkout') {
            steps {
                // Limpa o Workspace
                cleanWs()
                sh "echo Clonando a branch selecionada '${BRANCH_TO_DEPLOY}'"
                // Baixa o codigo
                git branch: "${BRANCH_TO_DEPLOY}", url: 'https://github.com/yanpgabriel/DuckApp.git'
            }
        }
        stage('Build') {
            agent { docker { image NODE_IMAGE; reuseNode true } }
            steps {
                // Roda o maven
                sh "npm install"
            }
        }
    }
}
